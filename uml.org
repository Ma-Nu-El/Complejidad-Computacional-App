#+TITLE: UML Diccionario
#+AUTHOR: [[mailto:manuel.fuica.morales@gmail.com][Manuel Fuica Morales]]
#+DATE: December 2021

* Arbol del proyecto
:PROPERTIES:
:header-args:shell: :dir ./ :results output replace
:END:

#+begin_src shell
tree src/main/java/com/ufrontera/java
#+end_src

#+RESULTS:
#+begin_example
src/main/java/com/ufrontera/java
├── Controller
│   ├── Controller.java
│   └── Main.java
├── Model
│   ├── ConsoleUtilities
│   │   └── ConsoleUtilities.java
│   ├── Core
│   │   ├── App.java
│   │   ├── Diccionario.java
│   │   ├── ListaDePalabras.java
│   │   ├── Node.java
│   │   ├── Palabra.java
│   │   └── Tree.java
│   └── Menu
│       └── ConsoleMenu.java
└── View
    └── View.java

6 directories, 11 files
#+end_example

* UML
:PROPERTIES:
:header-args: :dir ./ :file-ext jpg :results link
:END:

#+name: UML
#+begin_src plantuml
left to right direction


'Controller'
package "Controller"  {

        class Main {
                + {field} controller: Controller
                + {method} controller.startCLI(): void
                + {method} controller.startGUI(): void
        }

        class Controller {
                - {field} App: app
                + {method} startCLI(): void
                + {method} startGUI(): void
        }

}

'Model'
package "Model" {

        package "Core"{
                class App {
                        ~ {field} palabras: Tree
                        ~ {field} listaDePalabras: ListaDePalabras
                        ~ {field} diccionario: Diccionario
                        ~ {field} menu: ConsoleMenu
                        ~ {field} outputFile: File
                        + {method} printMenu(): void
                        + {method} agregarPalabras(): void
                        + {method} mostrarPalabras(): void
                        + {method} mostraraPalabrasOrdenadas(): void
                        + {method} buscarPalabra(): void
                        + {method} eliminarPalabra(): void
                        + {method} exportarDiccionario(): void
                        + {method} importarDiccionario(): void
                }
                class Diccionario {
                        ~ {field} lista: ListaDePalabras
                        ~ {field} diccionario: String[][]
                        + {method} getDiccionario(): String
                }
                class ListaDePalabras {
                        - {field} lista: String[][]
                        + {method} printLista(): void
                        + {method} getLista(): String[][]
                }
                class Node {
                        + {field} palabra: Palabra
                        + {field} hijoIzquierdo: Node
                        + {field} hijoDerecho: Node
                        + {method} setPalabra(): void
                        + {method} getPalabra(): Palabra
                }
                class Palabra {
                        - {field} nombre: String
                        - {field} significado: String
                        - {field} clasificacion: String
                        + {method} mostrarNombre(): void
                        + {method} mostrarSignificado(): void
                        + {method} mostrarClasificacion(): void
                        + {method} getNombre(): String
                        + {method} getSignificado(): String
                        + {method} getClasificacion(): String
                }
                class Tree {
                        - {field} root: Node
                        - {method} getSuccessor(delNode: Node): Node
                        - {method} inOrder(node:Node): void
                        - {method} inOrder(node:Node,ps:PrintStream): void
                        + {method} find(nombre:String): Palabra
                        + {method} agregar(nombre:String,significado:String,clasificacion:String): void
                        + {method} eliminar(nombre:String): boolean
                        + {method} mostrar(): void
                        + {method} guardarDiccionario(ps:PrintStream): void
                }

        }
        package "ConsoleUtilities"{
                class ConsoleUtilities{
                        + {method} printIntro(): void
                        + {method} printMenu(): void
                        + {method} init(): void
                }

        }
        package "Menu"{
                class ConsoleMenu{
                        ~ {field} console: ConsoleUtilities
                        + {method} displayAppOptions(): void
                }
        }

}

'View'
package "View"  {
        class View {
                ~ {field} importButton: JButton
                ~ {field} exportButton: JButton
                ~ {field} displayButton: JButton
                ~ {field} addButton: JButton
                ~ {field} deleteButton: JButton
                ~ {field} searchButton: JButton
                + {method} addImportListener(listener: ActionListener): void
                + {method} addExportListener(listener: ActionListener): void
                + {method} addDisplayListener(listener: ActionListener): void
                + {method} addAddListener(listener: ActionListener): void
                + {method} addDeleteListener(listener: ActionListener): void
                + {method} addSearchListener(listener: ActionListener): void

        }
}

'Relations'
Main -- Controller

App -- Controller
App -- Tree
App -- ListaDePalabras
App -- Diccionario
App -- ConsoleMenu
ConsoleMenu -- ConsoleUtilities
Diccionario -- ListaDePalabras
Tree -- Node
Node -- Palabra
View -- Controller
#+end_src

#+RESULTS: UML
[[file:UML.jpg]]

#+RESULTS: MVC
